import "header.proto";
message NebCallbackHeader {
	optional int32 flags = 1;
	optional int32 attr = 2;
	optional Timeval timestamp = 3;
};

message ProcessData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
};

message TimedEventData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 event_type = 7;
	optional int32 recurring = 8;
	optional int64 run_time = 9;
};

message LogData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int64 entry_time = 7;
	optional int32 data_type = 8;
	optional string data = 9;
};

message SystemCommandData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional Timeval start_time = 7;
	optional Timeval end_time = 8;
	optional int32 timeout = 9;
	optional string command_line = 10;
	optional int32 early_timeout = 11;
	optional double execution_time = 12;
	optional int32 return_code = 13;
	optional string output = 14;
};

message EventHandlerData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 eventhandler_type = 7;
	optional string host_name = 8;
	optional string service_description = 9;
	optional int32 state_type = 10;
	optional int32 state = 11;
	optional int32 timeout = 12;
	optional string command_name = 13;
	optional string command_args = 14;
	optional string command_line = 15;
	optional Timeval start_time = 16;
	optional Timeval end_time = 17;
	optional int32 early_timeout = 18;
	optional double execution_time = 19;
	optional int32 return_code = 20;
	optional string output = 21;
};

message HostCheckData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional string host_name = 7;
	optional int32 current_attempt = 8;
	optional int32 check_type = 9;
	optional int32 max_attempts = 10;
	optional int32 state_type = 11;
	optional int32 state = 12;
	optional int32 timeout = 13;
	optional string command_name = 14;
	optional string command_args = 15;
	optional string command_line = 16;
	optional Timeval start_time = 17;
	optional Timeval end_time = 18;
	optional int32 early_timeout = 19;
	optional double execution_time = 20;
	optional double latency = 21;
	optional int32 return_code = 22;
	optional string output = 23;
	optional string long_output = 24;
	optional string perf_data = 25;
};

message ServiceCheckData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional string host_name = 7;
	optional string service_description = 8;
	optional int32 check_type = 9;
	optional int32 current_attempt = 10;
	optional int32 max_attempts = 11;
	optional int32 state_type = 12;
	optional int32 state = 13;
	optional int32 timeout = 14;
	optional string command_name = 15;
	optional string command_args = 16;
	optional string command_line = 17;
	optional Timeval start_time = 18;
	optional Timeval end_time = 19;
	optional int32 early_timeout = 20;
	optional double execution_time = 21;
	optional double latency = 22;
	optional int32 return_code = 23;
	optional string output = 24;
	optional string long_output = 25;
	optional string perf_data = 26;
};

message CommentData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 comment_type = 7;
	optional string host_name = 8;
	optional string service_description = 9;
	optional int64 entry_time = 10;
	optional string author_name = 11;
	optional string comment_data = 12;
	optional int32 persistent = 13;
	optional int32 source = 14;
	optional int32 entry_type = 15;
	optional int32 expires = 16;
	optional int64 expire_time = 17;
	optional fixed64 comment_id = 18;
};

message DowntimeData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 downtime_type = 7;
	optional string host_name = 8;
	optional string service_description = 9;
	optional int64 entry_time = 10;
	optional string author_name = 11;
	optional string comment_data = 12;
	optional int64 start_time = 13;
	optional int64 end_time = 14;
	optional int32 fixed = 15;
	optional fixed64 duration = 16;
	optional fixed64 triggered_by = 17;
	optional fixed64 downtime_id = 18;
};

message FlappingData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 flapping_type = 7;
	optional string host_name = 8;
	optional string service_description = 9;
	optional double percent_change = 10;
	optional double high_threshold = 11;
	optional double low_threshold = 12;
	optional fixed64 comment_id = 13;
};

message ProgramStatusData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int64 program_start = 7;
	optional int32 pid = 8;
	optional int32 daemon_mode = 9;
	optional int64 last_log_rotation = 10;
	optional int32 notifications_enabled = 11;
	optional int32 active_service_checks_enabled = 12;
	optional int32 passive_service_checks_enabled = 13;
	optional int32 active_host_checks_enabled = 14;
	optional int32 passive_host_checks_enabled = 15;
	optional int32 event_handlers_enabled = 16;
	optional int32 flap_detection_enabled = 17;
	optional int32 process_performance_data = 18;
	optional int32 obsess_over_hosts = 19;
	optional int32 obsess_over_services = 20;
	optional fixed64 modified_host_attributes = 21;
	optional fixed64 modified_service_attributes = 22;
	optional string global_host_event_handler = 23;
	optional string global_service_event_handler = 24;
};

message HostStatusData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
};

message ServiceStatusData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
};

message ContactStatusData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
};

message NotificationData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 notification_type = 7;
	optional Timeval start_time = 8;
	optional Timeval end_time = 9;
	optional string host_name = 10;
	optional string service_description = 11;
	optional int32 reason_type = 12;
	optional int32 state = 13;
	optional string output = 14;
	optional string ack_author = 15;
	optional string ack_data = 16;
	optional int32 escalated = 17;
	optional int32 contacts_notified = 18;
};

message ContactNotificationData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 notification_type = 7;
	optional Timeval start_time = 8;
	optional Timeval end_time = 9;
	optional string host_name = 10;
	optional string service_description = 11;
	optional string contact_name = 12;
	optional int32 reason_type = 13;
	optional int32 state = 14;
	optional string output = 15;
	optional string ack_author = 16;
	optional string ack_data = 17;
	optional int32 escalated = 18;
};

message ContactNotificationMethodData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 notification_type = 7;
	optional Timeval start_time = 8;
	optional Timeval end_time = 9;
	optional string host_name = 10;
	optional string service_description = 11;
	optional string contact_name = 12;
	optional string command_name = 13;
	optional string command_args = 14;
	optional int32 reason_type = 15;
	optional int32 state = 16;
	optional string output = 17;
	optional string ack_author = 18;
	optional string ack_data = 19;
	optional int32 escalated = 20;
};

message AdaptiveProgramData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 command_type = 7;
	optional fixed64 modified_host_attribute = 8;
	optional fixed64 modified_host_attributes = 9;
	optional fixed64 modified_service_attribute = 10;
	optional fixed64 modified_service_attributes = 11;
};

message AdaptiveHostData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 command_type = 7;
	optional fixed64 modified_attribute = 8;
	optional fixed64 modified_attributes = 9;
};

message AdaptiveServiceData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 command_type = 7;
	optional fixed64 modified_attribute = 8;
	optional fixed64 modified_attributes = 9;
};

message AdaptiveContactData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 command_type = 7;
	optional fixed64 modified_attribute = 8;
	optional fixed64 modified_attributes = 9;
	optional fixed64 modified_host_attribute = 10;
	optional fixed64 modified_host_attributes = 11;
	optional fixed64 modified_service_attribute = 12;
	optional fixed64 modified_service_attributes = 13;
};

message ExternalCommandData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 command_type = 7;
	optional int64 entry_time = 8;
	optional string command_string = 9;
	optional string command_args = 10;
};

message AggregatedStatusData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
};

message RetentionData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
};

message AcknowledgementData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 acknowledgement_type = 7;
	optional string host_name = 8;
	optional string service_description = 9;
	optional int32 state = 10;
	optional string author_name = 11;
	optional string comment_data = 12;
	optional int32 is_sticky = 13;
	optional int32 persistent_comment = 14;
	optional int32 notify_contacts = 15;
};

message StatechangeData {
	optional MerlinHeader header = 1;
	optional NebCallbackHeader neb_header = 2;
	optional int32 type = 3;
	optional int32 flags = 4;
	optional int32 attr = 5;
	optional Timeval timestamp = 6;
	optional int32 statechange_type = 7;
	optional string host_name = 8;
	optional string service_description = 9;
	optional int32 state = 10;
	optional int32 state_type = 11;
	optional int32 current_attempt = 12;
	optional int32 max_attempts = 13;
	optional string output = 14;
};

