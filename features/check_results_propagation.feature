@config @daemons @merlin @queryhandler @livestatus

Feature: When a passive check result is sent to a node, i.e. when a command
	is sent to Naemon saying it should process a check result a check result
	is generated by Naemon.

	If a check result is generated at a node, either a service check
	or a host check it should propagate to its peers and masters.
	A check result must never propagate downards, that is to pollers,
	since if the result is generated at the local node then the poller is
	implicitly NOT the owner of the check as the result then would've been
	generated at the poller.

	When generating a check at a node the result should also be registered to
	the object in Naemon. This goes for when receiving a check result over
	Merlin as well.

	If a check result is received over Merlin we must also test to make sure
	that the result does not propagate any further. As the results must never
	"bounce" more than once.

	Background: Set up naemon configuration
		Given I have naemon hostgroup objects
		| hostgroup_name | alias |
		| pollergroup    | PG    |
		| emptygroup     | EG    |
		Given I have naemon host objects
		| use          | host_name | address   | contacts  | max_check_attempts | hostgroups  |
		| default-host | hostA     | 127.0.0.1 | myContact | 2                  | pollergroup |
		| default-host | hostB     | 127.0.0.2 | myContact | 2                  | pollergroup |
		And I have naemon service objects
		| use             | host_name | description |
		| default-service | hostA     | PONG        |
		| default-service | hostB     | PONG        |
		And I have naemon contact objects
		| use             | contact_name |
		| default-contact | myContact    |

	# Test Host Check Result propagation

	Scenario: As master, when generating a host check result, it should be
		registered to the object in Naemon. Additionally the result should
		propagate to peer but NOT to the poller.
		Given I start naemon with merlin nodes connected
			| type   | name      | port | hostgroup   |
			| peer   | my_peer   | 4001 | ignore      |
			| poller | my_poller | 4002 | emptygroup  |
		And I should have 0 hosts objects matching state = 1
		When I send naemon command PROCESS_HOST_CHECK_RESULT;hostA;1;Not OK
		And I send naemon command PROCESS_HOST_CHECK_RESULT;hostB;1;Not OK
		Then I should have 1 hosts objects matching state = 1
		And my_peer received event HOST_STATUS
		And my_poller should not receive HOST_STATUS

	Scenario: As master, when receiving a host check result from poller it
		should be registered to the object in Naemon. Additionally the result
		should not propagate to the peer nor the poller.
		Given I start naemon with merlin nodes connected
			| type   | name      | port | hostgroup   |
			| peer   | my_peer   | 4001 | ignore      |
			| poller | my_poller | 4002 | emptygroup  |
		And I should have 0 hosts objects matching state = 1
		When my_poller sends event HOST_STATUS
			| name                  | hostA |
			| state.state_type      | 0     |
			| state.current_state   | 1     |
			| state.current_attempt | 1     |
		Then I should have 1 hosts objects matching state = 1
		And my_peer should not receive HOST_STATUS
		And my_poller should not receive HOST_STATUS

	Scenario: As master, when receiving a host check result from peer is should
		be registered to the object in Naemon. Additionally it should NOT
		propagate to the peer nor the poller.
		Given I start naemon with merlin nodes connected
			| type   | name      | port | hostgroup   |
			| peer   | my_peer   | 4001 | ignore      |
			| poller | my_poller | 4002 | emptygroup  |
		And I should have 0 hosts objects matching state = 1
		When my_peer sends event HOST_STATUS
			| name                  | hostA |
			| state.state_type      | 0     |
			| state.current_state   | 1     |
			| state.current_attempt | 1     |
		Then I should have 1 hosts objects matching state = 1
		And my_peer should not receive HOST_STATUS
		And my_poller should not receive HOST_STATUS

	Scenario: As poller, when generating a host check result, it should be
		registered to the object in Naemon. Additionally the result should
		propagate to the peer and to the master.
		Given I start naemon with merlin nodes connected
			| type   | name      | port |
			| peer   | my_peer   | 4001 |
			| master | my_master | 4002 |
		And I should have 0 hosts objects matching state = 1
		When I send naemon command PROCESS_HOST_CHECK_RESULT;hostA;1;Not OK
		And I send naemon command PROCESS_HOST_CHECK_RESULT;hostB;1;Not OK
		Then I should have 1 hosts objects matching state = 1
		And my_peer received event HOST_STATUS
		And my_master received event HOST_STATUS

	Scenario: As poller, when receiving a host check result from a peer it
		should be registered to the object in Naemon. Additionally it should
		NOT propagate to the peer nor the master.
		Given I start naemon with merlin nodes connected
			| type   | name      | port |
			| peer   | my_peer   | 4001 |
			| master | my_master | 4002 |
		And I should have 0 hosts objects matching state = 1
		When my_peer sends event HOST_STATUS
			| name                  | hostA |
			| state.state_type      | 0     |
			| state.current_state   | 1     |
			| state.current_attempt | 1     |
		Then I should have 1 hosts objects matching state = 1
		And my_peer should not receive HOST_STATUS
		And my_master should not receive HOST_STATUS

	# Scenarios below cover Service Check Results propagation

	Scenario: As master, when generating a service check result, it should be
		registered to the object in Naemon. Additionally the result should
		propagate to peer but NOT to the poller.
		Given I start naemon with merlin nodes connected
			| type   | name      | port | hostgroup   |
			| peer   | my_peer   | 4001 | ignore      |
			| poller | my_poller | 4002 | emptygroup  |
		And I should have 0 services objects matching state = 1
		When I send naemon command PROCESS_SERVICE_CHECK_RESULT;hostA;PONG;1;Not OK
		And I send naemon command PROCESS_SERVICE_CHECK_RESULT;hostB;PONG;1;Not OK
		Then I should have 1 services objects matching state = 1
		And my_peer received event SERVICE_STATUS
		And my_poller should not receive SERVICE_STATUS

	Scenario: As master, when receiving a service check result from poller it
		should be registered to the object in Naemon. Additionally the result
		should not propagate to the peer nor the poller.
		Given I start naemon with merlin nodes connected
			| type   | name      | port | hostgroup   |
			| peer   | my_peer   | 4001 | ignore      |
			| poller | my_poller | 4002 | emptygroup  |
		And I should have 0 services objects matching state = 1
		When my_poller sends event SERVICE_STATUS
			| host_name             | hostA |
			| service_description   | PONG  |
			| state.state_type      | 0     |
			| state.current_state   | 1     |
			| state.current_attempt | 1     |
		Then I should have 1 services objects matching state = 1
		And my_peer should not receive SERVICE_STATUS
		And my_poller should not receive SERVICE_STATUS

	Scenario: As master, when receiving a service check result from peer it
		should be registered to the object in Naemon. Additionally it should
		NOT propagate to the peer nor the poller.
		Given I start naemon with merlin nodes connected
			| type   | name      | port | hostgroup   |
			| peer   | my_peer   | 4001 | ignore      |
			| poller | my_poller | 4002 | emptygroup  |
		And I should have 0 services objects matching state = 1
		When my_peer sends event SERVICE_STATUS
			| host_name             | hostA |
			| service_description   | PONG  |
			| state.state_type      | 0     |
			| state.current_state   | 1     |
			| state.current_attempt | 1     |
		Then I should have 1 services objects matching state = 1
		And my_peer should not receive SERVICE_STATUS
		And my_poller should not receive SERVICE_STATUS

	Scenario: As poller, when generating a service check result, it should be
		registered to the object in Naemon. Additionally the result should
		propagate to the peer and to the master.
		Given I start naemon with merlin nodes connected
			| type   | name      | port |
			| peer   | my_peer   | 4001 |
			| master | my_master | 4002 |
		And I should have 0 services objects matching state = 1
		When I send naemon command PROCESS_SERVICE_CHECK_RESULT;hostA;PONG;1;Not OK
		And I send naemon command PROCESS_SERVICE_CHECK_RESULT;hostB;PONG;1;Not OK
		Then I should have 1 services objects matching state = 1
		And my_peer received event SERVICE_STATUS
		And my_master received event SERVICE_STATUS

	Scenario: As poller, when receiving a service check result from a peer it
		should be registered to the object in Naemon. Additionally it should
		NOT propagate to the peer nor the master.
		Given I start naemon with merlin nodes connected
			| type   | name      | port |
			| peer   | my_peer   | 4001 |
			| master | my_master | 4002 |
		And I should have 0 services objects matching state = 1
		When my_peer sends event SERVICE_STATUS
			| host_name             | hostA |
			| service_description   | PONG  |
			| state.state_type      | 0     |
			| state.current_state   | 1     |
			| state.current_attempt | 1     |
		Then I should have 1 services objects matching state = 1
		And my_peer should not receive SERVICE_STATUS
		And my_master should not receive SERVICE_STATUS