import "ctrl.proto";
import "nebcallback.proto";
message Timeval {
	optional int64 sec = 1;
	optional int64 usec = 2;
};

message MerlinHeader {
	required uint64 sig = 1 [default = 0x005456454e4c524d]; // "MRLNEVT\0"
	optional int32 protocol= 2 [default = 2];
	optional bool nonet = 3 [default = false]; //XXX: Perhaps make this a bitmask, called flags?
	optional int32 selection = 4;
	optional Timeval sent = 5;

};

message MerlinMessage {
    optional MerlinHeader header = 1;

    // General CTRL packets
    optional MerlinCtrlPacket merlin_ctrl_packet= 2;

    // NEB-Callback packets
    optional ProcessData process_data = 3;
    optional TimedEventData timed_event_data = 4;
    optional LogData log_data = 5;
    optional SystemCommandData system_command_data = 6;
    optional EventHandlerData event_handler_data = 7;
    optional HostCheckData host_check_data = 8;
    optional ServiceCheckData service_check_data = 9;
    optional CommentData comment_data = 10;
    optional DowntimeData downtime_data = 11;
    optional FlappingData flapping_data = 12;
    optional ProgramStatusData program_status_data = 13;
    optional HostStatusData host_status_data = 14;
    optional ServiceStatusData service_status_data = 15;
    optional ContactStatusData contact_status_data = 16;
    optional NotificationData notification_data = 17;
    optional ContactNotificationData contact_notification_data = 18;
    optional ContactNotificationMethodData contact_notification_method_data = 19;
    optional AdaptiveProgramData adaptive_program_data = 20;
    optional AdaptiveHostData adaptive_host_data = 21;
    optional AdaptiveServiceData adaptive_service_data = 22;
    optional AdaptiveContactData adaptive_contact_data = 23;
    optional ExternalCommandData external_command_data = 24;
    optional AggregatedStatusData aggregated_status_data = 25;
    optional RetentionData retention_data = 26;
    optional AcknowledgementData acknowledgement_data = 27;
    optional StatechangeData statechange_data = 28;
};
