.TH MON 1
.SH NAME
mon \- manage OP5 MONITOR
.SH SYNOPSIS
.B mon [-h] | \fBcommand\fR [\fBoptions\fR]... [\fBcommand\fR]
.SH DESCRIPTION
.B mon
is used to manually stop and start the \fImonitor\fR system processes, and to set up a distributed and/or load balanced environment.
.SH OPTIONS
.TP
.BR \-h ", " \-\-help
Display a friendly help message.
.SH COMMANDS
.SS START
.TP
.BR mon\ start
Start \fImonitor\fR and \fImerlind\fR system processes.
.SS STOP
.TP
.BR mon\ stop
Stop \fImonitor\fR and \fImerlind\fR system processes.
.SS RESTART
.TP
.BR mon\ restart
Restart \fImonitor\fR and \fImerlind\fR system processes.
.SS ASCII
Documentation coming soon.
.SS CHECK
Documentation coming soon.
.SS DB
Documentation coming soon.
.SS ECMD
.nf
.SS search
.TP
.BR mon\ ecmd\ search\ \fIregex\fR
Prints
.I templates
for all available commands matching \fIregex\fR.
The search is case insensitive.
.SS submit
.TP
.BR mon\ ecmd\ submit\ \fI[options]\fR\ \fIcommand\fR\ \fIargument\ ...\fR
Submits a
.I command
to the monitoring engine using the supplied \fIargument(s)\fr.
.SS LOG
.SS show
.TP
.BR mon\ log\ show\ \fIargument\ ...\fR
Runs the \fIshowlog\fR helper program.
Arguments passed to this command will be sent to the \fIshowlog\fR helper.
For more information, a help text can be found by running the command like this:
.PP
.RS
.BR mon\ log\ show\ \-\-help
.RE
.SS MT
Documentation coming soon.
.SS NODE
.SS add
.TP
.BR mon\ node\ add\ \fR<name>\ \-\-type=[peer|poller|master]\ [var\fIN\fR=\fIvalue]\ ...\fR
Adds a node with the designated
.I type
and
.I variables.
.SS ctrl
.nf
.B mon\ node\ ctrl\fR\ <name>\ ...\ \e
[--self] [--all|--type=[peer|poller|master]]\ \-\-\ \fIcommand\fR
.fi
.PP
Executes \fIcommand\fR on the [remote] node(s) named.
If \fIname\fR is not specified the \fIcommand\fR will run on all \fInodes\fR except itself.
.PP
Optional arguments:
.TP
.BR \-\-self
Also run the \fIcommand\fR on the local system. This is not done unless explicitly specified by this flag.
.TP
.BR \-\-all
Run \fIcommand\fR on all configured \fInodes\fR.
.TP
.BR \-\-type
Run \fIcommand\fR on configured \fInodes\fR of the given \fItype\fR.
.TP
.BR \-\-
Stop argument scanning.
.PP
.RS
Everything after will be treated as part of the \fIcommand\fR.
The first unrecognized argument marks the start of the \fIcommand\fR to be executed,
but using double dashes is recommended.
Use single-quotes to execute commands with shell variables,
output redirection, or scriptlets.
.PP
Example:
.TP
.BR mon\ node\ ctrl\ \-\-\ \fR'(for\ x\ in\ 1\ 2\ 3\;\ do\ echo\ $x;\ done)\ >\ /tmp/foo'
.TP
.BR mon\ node\ ctrl\ \-\-\ \fRcat\ /tmp/foo
.RE
.SS info
.TP
.BR mon\ node\ info
Prints verbose information about all merlin nodes.
.SS list
.TP
.BR mon\ node\ list\ \fR[\-\-type=master,peer,poller]
Lists all nodes of the (optionally) specified \fItype\fR.
.SS rawctrl
Documentation missing.
.SS remove
.TP
.BR mon\ node\ remove\ \fIname1\fR\ [nameN]\ ...
.SS show
.TP
.BR mon\ node\ show\ \fR[\-\-type=poller,peer,master]
Display all variables for all nodes, or for one node.
Output is formatted in a fashion suitable for being used in shell scripts as:
.PP
.RS
.BR eval\ $(mon\ node\ show\ \fInodename\fR)
.RE
.SS status
.TP
.BR mon\ node\ status
Show the status of all nodes configured in the running \fImerlin daemon\fR.
Red text points to problem areas, such as:
.IP \[bu] 2
High latency
.IP \[bu]
The node being inactive
.IP \[bu]
Not handling any checks
.IP \[bu]
Sending regular enough \fIprogram_status\fR updates.
.SS OCONF
Documentation coming FOO.
.SS QH
Documentation coming soon.
.SS QUERY
Documentation coming soon.
.SS SOP
Documentation coming soon.
.SS SSHKEY
Documentation coming soon.
.SS STATUS
Documentation coming soon.
.SS SYSCONFIG
Documentation coming soon.
.SH EXAMPLE
.TP
To check the status of all connected nodes, use the
.BR node\ status
command:
.PP
.nf
.RS
mon node status
.RE
.fi
.PP
.TP
To add a new service comment for the service \fIPING\fR on the host \fIfoo\fR would look something like this:
.PP
.nf
.RS
mon ecmd submit add_svc_comment service='foo;PING' \e
persistent=1 author='John Doe' comment='the comment'
.RE
.fi
.PP
